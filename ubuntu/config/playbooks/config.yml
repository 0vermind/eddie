- hosts: all
  remote_user: chillaranand
  become: yes
  become_method: sudo

  vars:
    root_email: anand21nanda@gmail.com
    user: chillaranand
    home: "/home/{{user}}/"
    config_root: "{{ home }}.01/"
    venv_root: "{{ home }}.virtualenvs/"

    ssh_users:
      - chillaranand

    utils:
      - clementine
      - vlc
      - compizconfig-settings-manager
      - compiz-plugins-extra
      - unity-tweak-tool
      - indicator-sysmonitor

      - build-essential
      - dconf-tools
      - arpon
      - tree
      - htop
      - nmap
      - npm
      - synapse
      - unzip
      - xcape
      - pastebinit
      - nethogs
      - fluxgui
      - git

      - tesseract-ocr



      - python-dev
      - python3-dev
      - python-pip
      - virtualenvwrapper

    ppas:
      - ppa:synapse-core/ppa
      - ppa:nathan-renniewaldock/flux


  tasks:
    - name: Add third party PPAs
      apt_repository: repo={{ item }} state=present
      with_items: "{{ ppas }}"

    - name: Install ubuntu packages
      apt: name={{ item }} state=present update_cache=yes cache_valid_time=8640000
      with_items: "{{ utils }}"


    - block:
      - name: Check if pyenv is installed
        stat: path=/usr/local/bin/pyenv
        register: pyenv
      - name: Download pyenv installer
        get_url:
          url=https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get
          dest=/tmp/helm-installer
          mode=0777
        when:
          pyenv.stat.exists == False
      - name: Install pyenv installer
        command: /bin/bash /tmp/pyenv-installer
        when:
          pyenv.stat.exists == False


    - block:
      - name: Check if helm is installed
        stat: path=/usr/local/bin/helm
        register: helm
      - name: Download helm installer
        get_url:
          url=https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer
          dest=/tmp/helm-installer
          mode=0777
        when:
          helm.stat.exists == False
      - name: Install helm installer
        command: /bin/bash /tmp/helm-installer
        when:
          helm.stat.exists == False


    - block:
      - name: Check if deis is installed
        stat: path=/usr/local/bin/deis
        register: deis
      - name: Download deis installer
        get_url:
          url=http://deis.io/deis-cli/install-v2.sh
          dest=/tmp/deis-installer
          mode=0777
        when:
          deis.stat.exists == False
      - name: Install deis installer
        command: /bin/bash /tmp/deis-installer
        when:
          deis.stat.exists == False
      - name: Move binary deis
        command: ln -fs $PWD/deis /usr/local/bin/deis


    - block:
      - name: Check if gcloud is installed
        stat: path=/usr/bin/gcloud
        register: gcloud
      - name: Install gcloud
        apt: name=google-cloud-sdk state=present update_cache=yes cache_valid_time=8640000
        when:
          gcloud.stat.exists == False
      - name: Update gcloud
        command: gcloud components update


    - block:
      - name: Check if kubectl is installed
        stat: path=/usr/local/bin/kubectl
        register: kubectl
      - name: Download kubectl installer
        get_url:
          url=https://storage.googleapis.com/kubernetes-release/release/v1.5.1/bin/linux/amd64/kubectl
          dest=/tmp/kubectl
          mode=0777
        when:
          kubectl.stat.exists == False
      - name: Move binary kubectl
        command: ln -fs /tmp/kubectl /usr/local/bin/kubectl




   # - name: Install docker
   #    command: curl -sSL https://get.docker.com/ | sudo bash

    # - git: repo=git://foosball.example.org/path/to/repo.git
           # dest: /home/chillaranand/.qfc


    # - name: Create virtualenv and install requirements
    #   pip:
    #     requirements: "{{ config_root }}/ubuntu/config/requirements.txt"
    #     virtualenv: "{{ venv_root }}/p35"
    #     virtualenv_python: python3.5
